/// @file keymap.cpp
#include "keymap.hpp"

namespace decklibrary {
    /// @brief Keyboard codes mapped to text.
    std::map<keymap, std::string> keystrings{
        {ESCAPE, "ESCAPE"},
        {F1, "F1"},
        {F2, "F2"},
        {F3, "F3"},
        {F4, "F4"},
        {F5, "F5"},
        {F6, "F6"},
        {F7, "F7"},
        {F8, "F8"},
        {F9, "F9"},
        {F10, "F10"},
        {F11, "F11"},
        {F12, "F12"},
        {SCROLL_LOCK, "SCROLL_LOCK"},
        {PAUSE, "PAUSE"},
        {BACKTICK, "`"},
        {TILDE, "~"},
        {ONE, "ONE"},
        {EXCLAMATION, "EXCLAMATION"},
        {TWO, "TWO"},
        {AT_SIGN, "AT_SIGN"},
        {THREE, "THREE"},
        {HASH, "HASH"},
        {FOUR, "FOUR"},
        {DOLLAR_SIGN, "DOLLAR_SIGN"},
        {FIVE, "FIVE"},
        {PERCENT, "PERCENT"},
        {SIX, "SIX"},
        {CARET, "CARET"},
        {SEVEN, "SEVEN"},
        {AMPERSAND, "AMPERSAND"},
        {EIGHT, "EIGHT"},
        {ASTERISK, "ASTERISK"},
        {NINE, "NINE"},
        {LEFT_PARENTHESIS, "LEFT_PARENTHESIS"},
        {ZERO, "ZERO"},
        {RIGHT_PARENTHESIS, "RIGHT_PARENTHESIS"},
        {DASH, "DASH"},
        {UNDERSCORE, "UNDERSCORE"},
        {EQUALS, "EQUALS"},
        {PLUS, "PLUS"},
        {BACKSPACE, "BACKSPACE"},
        {INSERT, "INSERT"},
        {HOME, "HOME"},
        {PAGEUP, "PAGEUP"},
        {TAB, "TAB"},
        {q, "q"},
        {Q, "Q"},
        {w, "w"},
        {W, "W"},
        {e, "e"},
        {E, "E"},
        {r, "r"},
        {R, "R"},
        {t, "t"},
        {T, "T"},
        {y, "y"},
        {Y, "Y"},
        {u, "u"},
        {U, "U"},
        {i, "i"},
        {I, "I"},
        {o, "o"},
        {O, "O"},
        {p, "p"},
        {P, "P"},
        {LEFT_BRACKET, "["},
        {LEFT_BRACE, "{"},
        {RIGHT_BRACKET, "]"},
        {RIGHT_BRACE, "}"},
        {BACKSLASH, "\\"},
        {PIPE, "|"},
        {DELETE, "DELETE"},
        {END, "END"},
        {PAGE_DOWN, "PAGE_DOWN"},
        {CAPS_LOCK, "CAPS_LOCK"},
        {a, "a"},
        {A, "A"},
        {s, "s"},
        {S, "S"},
        {d, "d"},
        {D, "D"},
        {f, "f"},
        {F, "F"},
        {g, "g"},
        {G, "G"},
        {h, "h"},
        {H, "H"},
        {j, "j"},
        {J, "J"},
        {k, "k"},
        {K, "K"},
        {l, "l"},
        {L, "L"},
        {SEMICOLON, ";"},
        {COLON, ":"},
        {APOSTROPHE, "'"},
        {QUOTE, "\""},
        {ENTER, "ENTER"},
        {SHIFT_L, "SHIFT_L"},
        {z, "z"},
        {Z, "Z"},
        {x, "x"},
        {X, "X"},
        {c, "c"},
        {C, "C"},
        {v, "v"},
        {V, "V"},
        {b, "b"},
        {B, "B"},
        {n, "n"},
        {N, "N"},
        {m, "m"},
        {M, "M"},
        {COMMA, ","},
        {LESS_THAN, "<"},
        {GREATER_THAN, ">"},
        {PERIOD, "."},
        {SLASH, "/"},
        {QUESTION_MARK, "?"},
        {SHIFT_R, "SHIFT_R"},
        {CTRL_L, "CTRL_L"},
        {META_L, "META_L"},
        {ALT_L, "ALT_L"},
        {SPACE, "SPACE"},
        {ALT_R, "ALT_R"},
        {META_R, "META_R"},
        {MENU, "MENU"},
        {CTRL_R, "CTRL_R"},
        {LEFT_ARROW, "LEFT_ARROW"},
        {UP_ARROW, "UP_ARROW"},
        {DOWN_ARROW, "DOWN_ARROW"},
        {RIGHT_ARROW, "RIGHT_ARROW"},
        {NUM_LOCK, "NUM_LOCK"},
        {KP_DIVIDE, "KP_DIVIDE"},
        {KP_MULTIPLY, "KP_MULTIPLY"},
        {KP_SUBTRACT, "KP_SUBTRACT"},
        {KP_7, "KP_7"},
        {KP_HOME, "KP_HOME"},
        {KP_8, "KP_8"},
        {KP_UP, "KP_UP"},
        {KP_9, "KP_9"},
        {KP_PRIOR, "KP_PRIOR"},
        {KP_ADD, "KP_ADD"},
        {KP_4, "KP_4"},
        {KP_LEFT, "KP_LEFT"},
        {KP_5, "KP_5"},
        {KP_HOME, "KP_HOME"},
        {KP_6, "KP_6"},
        {KP_RIGHT, "KP_RIGHT"},
        {KP_1, "KP_1"},
        {KP_END, "KP_END"},
        {KP_2, "KP_2"},
        {KP_DOWN, "KP_DOWN"},
        {KP_3, "KP_3"},
        {KP_NEXT, "KP_NEXT"},
        {KP_0, "KP_0"},
        {KP_INSERT, "KP_INSERT"},
        {KP_DECIMAL, "KP_DECIMAL"},
        {KP_DELETE, "KP_DELETE"},
        {KP_ENTER, "KP_ENTER"}
    };
    /// @brief Strings to keycodes.
    std::map<std::string, keymap> keycodes = {
        {"ESCAPE", ESCAPE},
        {"F1", F1},
        {"F2", F2},
        {"F3", F3},
        {"F4", F4},
        {"F5", F5},
        {"F6", F6},
        {"F7", F7},
        {"F8", F8},
        {"F9", F9},
        {"F10", F10},
        {"F11", F11},
        {"F12", F12},
        {"TILDE", TILDE},
        {"~", TILDE},
        {"BACKTICK", BACKTICK},
        {"`", BACKTICK},
        {"EXCLAMATION", EXCLAMATION},
        {"!", EXCLAMATION},
        {"ONE", ONE},
        {"1", ONE},
        {"AT_SIGN", AT_SIGN},
        {"@", AT_SIGN},
        {"TWO", TWO},
        {"2", TWO},
        {"HASH", HASH},
        {"#", HASH},
        {"THREE", THREE},
        {"3", THREE},
        {"DOLLAR_SIGN", DOLLAR_SIGN},
        {"$", DOLLAR_SIGN},
        {"FOUR", FOUR},
        {"4", FOUR},
        {"PERCENT", PERCENT},
        {"%", PERCENT},
        {"FIVE", FIVE},
        {"5", FIVE},        
        {"CARET", CARET},
        {"^", CARET},
        {"SIX", SIX},
        {"6", SIX},
        {"AMPERSAND", AMPERSAND},
        {"&", AMPERSAND},
        {"SEVEN", SEVEN},
        {"7", SEVEN},
        {"SEVEN", SEVEN},
        {"7", SEVEN},
        {"ASTERISK", ASTERISK},
        {"*", ASTERISK},       
        {"EIGHT", EIGHT},
        {"8", EIGHT},
        {"LEFT_PARENTHESIS", LEFT_PARENTHESIS},
        {"(", LEFT_PARENTHESIS},             
        {"NINE", NINE},
        {"9", NINE},
        {"RIGHT_PARENTHESIS", RIGHT_PARENTHESIS},
        {")", RIGHT_PARENTHESIS},     
        {"ZERO", ZERO},
        {"0", ZERO},
        {"UNDERSCORE", UNDERSCORE},
        {"_", UNDERSCORE},   
        {"DASH", DASH},
        {"-", DASH},                
        {"PLUS", PLUS},
        {"+", PLUS},
        {"EQUALS", EQUALS},
        {"=", EQUALS},
        {"BACKSPACE", BACKSPACE},
        {"TAB", TAB},
        {"Q", Q},
        {"q", q},
        {"W", W},
        {"w", w},
        {"E", E},
        {"e", e},
        {"R", R},
        {"r", r},
        {"T", T},
        {"t", t},
        {"Y", Y},
        {"y", y},
        {"U", U},
        {"u", u},
        {"I", I},
        {"i", i},
        {"O", O},
        {"o", o},
        {"P", P},
        {"p", p},
        {"LEFT_BRACKET", LEFT_BRACKET},
        {"{", LEFT_BRACKET},
        {"LEFT_BRACE", LEFT_BRACE},
        {"[", LEFT_BRACE},
        {"RIGHT_BRACKET", RIGHT_BRACKET},
        {"}", RIGHT_BRACKET},
        {"RIGHT_BRACE", RIGHT_BRACE},
        {"]", RIGHT_BRACE},
        {"PIPE", PIPE},
        {"|", PIPE},
        {"BACKSLASH", BACKSLASH},
        {"\\", BACKSLASH},        
        {"CAPS_LOCK", CAPS_LOCK},
        {"A", A},
        {"a", a},
        {"S", S},
        {"s", s},
        {"D", D},
        {"d", d},
        {"F", F},
        {"f", f},
        {"G", G},
        {"g", g},
        {"H", H},
        {"h", h},
        {"J", J},
        {"j", j},
        {"K", K},
        {"k", k},
        {"L", L},
        {"l", l},
        {"COLON", COLON},
        {":", COLON},
        {"SEMICOLON", SEMICOLON},
        {";", SEMICOLON},
        {"QUOTE", QUOTE},
        {"\"", QUOTE},
        {"APOSTROPHE", APOSTROPHE},
        {"'", APOSTROPHE},        
        {"ENTER", ENTER},
        {"SHIFT_L", SHIFT_L},
        {"Z", Z},
        {"z", z},
        {"X", X},
        {"x", x},
        {"C", C},
        {"c", c},
        {"V", V},
        {"v", v},
        {"B", B},
        {"b", b},
        {"N", N},
        {"n", n},
        {"M", M},
        {"m", m},
        {"LESS_THAN", LESS_THAN},
        {"<", LESS_THAN},
        {"COMMA", COMMA},
        {",", COMMA},
        {"GREATER_THAN", GREATER_THAN},
        {">", GREATER_THAN},                
        {"PERIOD", PERIOD},
        {".", PERIOD},
        {"QUESTION_MARK", QUESTION_MARK},
        {"?", QUESTION_MARK},
        {"SLASH", SLASH},
        {"/", SLASH},
        {"SHIFT_R", SHIFT_R},
        {"CTRL_L", CTRL_L},
        {"META_L", META_L},
        {"ALT_L", ALT_L},
        {"SPACE", SPACE},
        {"ALT_R", ALT_R},
        {"META_R", META_R},
        {"MENU", MENU},
        {"CTRL_R", CTRL_R},
        {"PRINT_SCREEN", PRINT_SCREEN},
        {"SCROLL_LOCK", SCROLL_LOCK},
        {"PAUSE", PAUSE},
        {"INSERT", INSERT},
        {"HOME", HOME},
        {"PAGEUP", PAGEUP},
        {"DELETE", DELETE},
        {"END", END},
        {"PAGE_DOWN", PAGE_DOWN},
        {"UP_ARROW", UP_ARROW},
        {"LEFT_ARROW", LEFT_ARROW},
        {"DOWN_ARROW", DOWN_ARROW},
        {"RIGHT_ARROW", RIGHT_ARROW},
        {"NUM_LOCK", NUM_LOCK},
        {"KP_DIVIDE", KP_DIVIDE},
        {"KP_MULTIPLY", KP_MULTIPLY},
        {"KP_SUBTRACT", KP_SUBTRACT},
        {"KP_7", KP_7},
        {"KP_8", KP_8},
        {"KP_9", KP_9},
        {"KP_ADD", KP_ADD},
        {"KP_4", KP_4},
        {"KP_5", KP_5},
        {"KP_6", KP_6},
        {"KP_1", KP_1},
        {"KP_2", KP_2},        
        {"KP_3", KP_3},
        {"KP_0", KP_0},
        {"KP_DECIMAL", KP_DECIMAL},
        {"KP_ENTER", KP_ENTER},
        {"SHIFT", SHIFT_L},
        {"CTRL", CTRL_R},
        {"ALT", ALT_L}
    };
    /// @brief evemu codes
    std::map<keymap, std::string> evemucode = {
        {ESCAPE, "KEY_ESC"},
        {F1, "KEY_F1"},
        {F2, "KEY_F2"},
        {F3, "KEY_F3"},
        {F4, "KEY_F4"},
        {F5, "KEY_F5"},
        {F6, "KEY_F6"},
        {F7, "KEY_F7"},
        {F8, "KEY_F8"},
        {F9, "KEY_F9"},
        {F10, "KEY_F10"},
        {F11, "KEY_F11"},
        {F12, "KEY_F12"},
        {BACKTICK, "KEY_GRAVE"},
        {ONE, "KEY_1"},
        {TWO, "KEY_2"},
        {THREE, "KEY_3"},
        {FOUR, "KEY_4"},
        {FIVE, "KEY_5"},
        {SIX, "KEY_6"},
        {SEVEN, "KEY_7"},
        {EIGHT, "KEY_8"},
        {NINE, "KEY_9"},
        {ZERO, "KEY_0"},
        {DASH, "KEY_MINUS"},
        {EQUALS, "KEY_EQUAL"},
        {BACKSPACE, "KEY_BACKSPACE"},
        {TAB, "KEY_TAB"},
        {q, "KEY_Q"},
        {w, "KEY_W"},
        {e, "KEY_E"},
        {r, "KEY_R"},
        {t, "KEY_T"},
        {y, "KEY_Y"},
        {u, "KEY_U"},
        {i, "KEY_I"},
        {o, "KEY_O"},
        {p, "KEY_P"},
        {LEFT_BRACE, "KEY_LEFTBRACE"},
        {RIGHT_BRACE, "KEY_RIGHTBRACE"},
        {BACKSLASH, "KEY_BACKSLASH"},
        {CAPS_LOCK, "KEY_CAPSLOCK"},
        {a, "KEY_A"},
        {s, "KEY_S"},
        {d, "KEY_D"},
        {f, "KEY_F"},
        {g, "KEY_G"},
        {h, "KEY_H"},
        {j, "KEY_J"},
        {k, "KEY_K"},
        {l, "KEY_L"},
        {SEMICOLON, "KEY_SEMICOLON"},
        {APOSTROPHE, "KEY_APOSTROPHE"},
        {ENTER, "KEY_ENTER"},
        {SHIFT_L, "KEY_LEFTSHIFT"},
        {z, "KEY_Z"},
        {x, "KEY_X"},
        {c, "KEY_C"},
        {v, "KEY_V"},
        {b, "KEY_B"},
        {n, "KEY_N"},
        {m, "KEY_M"},
        {COMMA, "KEY_COMMA"},
        {PERIOD, "KEY_DOT"},
        {SLASH, "KEY_SLASH"},
        {SHIFT_R, "KEY_RIGHTSHIFT"},
        {CTRL_L, "KEY_LEFTCTRL"},
        {META_L, "KEY_LEFTMETA"},
        {ALT_L, "KEY_LEFTALT"},
        {SPACE, "KEY_SPACE"},
        {ALT_R, "KEY_RIGHTALT"},
        {META_R, "KEY_RIGHTMETA"},
        {MENU, "KEY_MENU"},
        {CTRL_R, "KEY_RIGHTCTRL"},
        {PRINT_SCREEN, "KEY_SYSRQ"},
        {SCROLL_LOCK, "KEY_SCROLLLOCK"},
        {PAUSE, "KEY_PAUSE"},
        {INSERT, "KEY_INSERT"},
        {HOME, "KEY_HOME"},
        {PAGEUP, "KEY_PAGEUP"},
        {DELETE, "KEY_DELETE"},
        {END, "KEY_END"},
        {PAGE_DOWN, "KEY_PAGEDOWN"},
        {UP_ARROW, "KEY_UP"},
        {LEFT_ARROW, "KEY_LEFT"},
        {DOWN_ARROW, "KEY_DOWN"},
        {RIGHT_ARROW, "KEY_RIGHT"},
        {NUM_LOCK, "KEY_NUMLOCK"},
        {KP_DIVIDE, "KEY_KPSLASH"},
        {KP_MULTIPLY, "KEY_KPASTERISK"},
        {KP_SUBTRACT, "KEY_KPMINUS"},
        {KP_7, "KEY_KP7"},
        {KP_8, "KEY_KP8"},
        {KP_9, "KEY_KP9"},
        {KP_ADD, "KEY_KPPLUS"},
        {KP_4, "KEY_KP4"},
        {KP_5, "KEY_KP5"},
        {KP_6, "KEY_KP6"},
        {KP_1, "KEY_KP1"},
        {KP_2, "KEY_KP2"},        
        {KP_3, "KEY_KP3"},
        {KP_0, "KEY_KP0"},
        {KP_DECIMAL, "KEY_KPDOT"},
        {KP_ENTER, "KEY_KPENTER"}
    };
    /// @brief xdotool codes
    std::map<keymap, std::string> xdotoolcode = {
        {ESCAPE, "Escape"},
        {F1, "F1"},
        {F2, "F2"},
        {F3, "F3"},
        {F4, "F4"},
        {F5, "F5"},
        {F6, "F6"},
        {F7, "F7"},
        {F8, "F8"},
        {F9, "F9"},
        {F10, "F10"},
        {F11, "F11"},
        {F12, "F12"},
        {BACKTICK, "grave"},
        {ONE, "1"},
        {TWO, "2"},
        {THREE, "3"},
        {FOUR, "4"},
        {FIVE, "5"},
        {SIX, "6"},
        {SEVEN, "7"},
        {EIGHT, "8"},
        {NINE, "9"},
        {ZERO, "0"},
        {DASH, "minus"},
        {EQUALS, "equal"},
        {BACKSPACE, "BackSpace"},
        {TAB, "Tab"},
        {q, "q"},
        {w, "w"},
        {e, "e"},
        {r, "r"},
        {t, "t"},
        {y, "y"},
        {u, "u"},
        {i, "i"},
        {o, "o"},
        {p, "p"},
        {LEFT_BRACE, "bracketleft"},
        {RIGHT_BRACE, "bracketright"},
        {BACKSLASH, "backslash"},
        {CAPS_LOCK, "Caps_Lock"},
        {a, "a"},
        {s, "s"},
        {d, "d"},
        {f, "f"},
        {g, "g"},
        {h, "h"},
        {j, "j"},
        {k, "k"},
        {l, "l"},
        {SEMICOLON, "semicolon"},
        {APOSTROPHE, "apostrophe"},
        {ENTER, "Return"},
        {SHIFT_L, "Shift_L"},
        {z, "z"},
        {x, "x"},
        {c, "c"},
        {v, "v"},
        {b, "b"},
        {n, "n"},
        {m, "m"},
        {COMMA, "comma"},
        {PERIOD, "period"},
        {SLASH, "slash"},
        {SHIFT_R, "Shift_R"},
        {CTRL_L, "Control_L"},
        {META_L, "Super_L"},
        {ALT_L, "Alt_L"},
        {SPACE, "space"},
        {ALT_R, "Alt_R"},
        {META_R, "Super_R"},
        {MENU, "Menu"},
        {CTRL_R, "Control_R"},
        {PRINT_SCREEN, "Print"},
        {SCROLL_LOCK, "Scroll_Lock"},
        {PAUSE, "Pause"},
        {INSERT, "Insert"},
        {HOME, "Home"},
        {PAGEUP, "Page_Up"},
        {DELETE, "Delete"},
        {END, "End"},
        {PAGE_DOWN, "Page_Down"},
        {UP_ARROW, "Up"},
        {LEFT_ARROW, "Left"},
        {DOWN_ARROW, "Down"},
        {RIGHT_ARROW, "Right"},
        {NUM_LOCK, "Num_Lock"},
        {KP_DIVIDE, "KP_Divide"},
        {KP_MULTIPLY, "KP_Multiply"},
        {KP_SUBTRACT, "KP_Subtract"},
        {KP_7, "KP_7"},
        {KP_8, "KP_8"},
        {KP_9, "KP_9"},
        {KP_ADD, "KP_Add"},
        {KP_4, "KP_4"},
        {KP_5, "KP_5"},
        {KP_6, "KP_6"},
        {KP_1, "KP_1"},
        {KP_2, "KP_2"},
        {KP_3, "KP_3"},
        {KP_0, "KP_0"},
        {KP_DECIMAL, "KP_Decimal"},
        {KP_ENTER, "KP_Enter"}
    };
    /// @brief Changes key to lowercase.
    std::map<keymap, keymap> lowkeys = {
        {TILDE, BACKTICK},
        {EXCLAMATION, ONE},
        {AT_SIGN, TWO},
        {HASH, THREE},
        {DOLLAR_SIGN, FOUR},
        {PERCENT, FIVE},
        {CARET, SIX},
        {AMPERSAND, SEVEN},
        {ASTERISK, EIGHT},
        {LEFT_PARENTHESIS, NINE},
        {RIGHT_PARENTHESIS, ZERO},
        {UNDERSCORE, DASH},
        {PLUS, EQUALS},
        {Q,q},
        {W, w},
        {E, e},
        {R, r},
        {T, t},
        {Y, y},
        {U, u},
        {I, i},
        {O, o},
        {P, p},
        {LEFT_BRACE, LEFT_BRACKET},
        {RIGHT_BRACE, RIGHT_BRACKET},
        {PIPE, BACKSLASH},
        {A, a},
        {S, s},
        {D, d},
        {F, f},
        {G, g},
        {H, h},
        {J, j},
        {K, k},
        {L, l},
        {COLON, SEMICOLON},
        {QUOTE, APOSTROPHE},
        {Z, z},
        {X, x},
        {C, c},
        {V, v},
        {B, b},
        {N, n},
        {M, m},
        {LESS_THAN, COMMA},
        {GREATER_THAN, PERIOD},
        {QUESTION_MARK, SLASH}
    };
    /// @brief 
    std::initializer_list<keymap> simplestrings =   {
        {q}, {Q}, {w}, {W}, {e}, {E}, {r}, {R}, {t}, {T}, {y}, {Y}, {u}, {U}, {i}, {I}, {o}, {O}, {p}, {P}, {a}, {A}, {s}, {S}, {d}, {D}, {f}, {F}, {g}, {G}, {h}, {H}, {j}, {J}, {k}, {K}, {l}, {L}, {z}, {Z}, {x}, {X}, {c}, {C}, {v}, {V}, {b}, {B}, {n}, {N}, {m}, {M}
    };
    /// @brief Keys not marked as dual function.
    std::initializer_list<keymap> nocasekeys =  { 
        ESCAPE, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F11, F12, PRINT_SCREEN, SCROLL_LOCK, PAUSE, BACKSPACE, INSERT, HOME, PAGEUP, TAB, DELETE, END, PAGE_DOWN, CAPS_LOCK, ENTER, SPACE, MENU, LEFT_ARROW, UP_ARROW, DOWN_ARROW, RIGHT_ARROW, NUM_LOCK, KP_DIVIDE, KP_MULTIPLY, KP_SUBTRACT, KP_ADD, KP_ENTER 
    };
    /// @brief Dual function keys which use shift.
    std::initializer_list<keymap> shiftkeys =   {
        TILDE, EXCLAMATION, AT_SIGN, HASH, DOLLAR_SIGN, PERCENT, CARET, AMPERSAND, ASTERISK, LEFT_PARENTHESIS, RIGHT_PARENTHESIS, UNDERSCORE, PLUS, Q , W, E, R, T , Y, U, I, O, P, LEFT_BRACE, RIGHT_BRACE, PIPE, A, S, D, F, G, H, J, K, L, COLON, QUOTE, Z, X, C, V, B, N, M, LESS_THAN, GREATER_THAN, QUESTION_MARK, KP_7, KP_8, KP_9, KP_4, KP_5, KP_6, KP_1, KP_2, KP_3, KP_0, KP_DECIMAL
    };
    /// @brief 
    std::initializer_list<keymap> modkeys = { SHIFT_L, CTRL_L, META_L, ALT_L, ALT_R, META_R, CTRL_R, SHIFT_R };
    /// @brief 
    std::vector<keymap> testkeys =  { 
        SHIFT_L, k, PLUS, l, PLUS, h, s, X, a, b, D, e, ALT_L, h, PLUS, H, CTRL_L, A, PLUS, B, PLUS, C, PLUS, d, e, f, CTRL_L, ALT_L, g, PLUS, h, PLUS, i, PLUS, j, ALT_L, X, PLUS, Y,PLUS, Z, H, e, l, l, o, SPACE, W, o, r, l, d, SHIFT_L, ONE, SPACE, CTRL_L, j, ALT_L, k, CTRL_L, SHIFT_L, END, SHIFT_L, DELETE, CTRL_L, INSERT, e, n, d 
    };
    /// @brief 
    std::map<std::string, modestrings> modestringmap = { {"Record", RECORD}, {"Edit", EDIT}, {"LoadImage", LOADIMAGE}, {"PushButton", PUSH}, {"PopButton", POP}, {"Demo", DEMO} 
    };
    
}
